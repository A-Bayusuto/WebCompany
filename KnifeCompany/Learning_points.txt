was spelt wrong
<partial name="_ValidationScriptPartial" />
vs
<partial name="_ValidationScriptsPartial" />

==================================================================================================================================
==================================================================================================================================

javascript flaw

wrong :
function loadDataTable() {
    dataTable = $('#tblData').DataTable({
        "ajax": {
            "url": "Admin/Category/GetAll"
        },
        "columns": [
            { "data": "name", "width": "60%" },
            {
                "data": function (data) {
                    return `
                            <div class="text-center">
                                <a href="/Admin/Category/Upsert/${data}" class="btn btn-success text-white" style="cursor:pointer">
                                    <i class="fas fa-edit"></i> 
                                </a>
                                <a class="btn btn-danger text-white" style="cursor:pointer">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </div>
                            `;
                }, "width" : "40%"
            }
        ]
    })

}

vs correct:

function loadDataTable() {
    dataTable = $('#tblData').DataTable({
        "ajax": {
            "url": "/Admin/Category/GetAll"
        },
        "columns": [
            { "data": "name", "width": "60%" },
            {
                "data": "id",
                "render": function (data) {
                    return `
                            <div class="text-center">
                                <a href="/Admin/Category/Upsert/${data}" class="btn btn-success text-white" style="cursor:pointer">
                                    <i class="fas fa-edit"></i> 
                                </a>
                                <a class="btn btn-danger text-white" style="cursor:pointer">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </div>
                            `;
                }, "width": "40%"
            }
        ]
    });

  
==================================================================================================================================
==================================================================================================================================

  swal => sweet alert


  https://www.udemy.com/course/complete-aspnet-core-21-course/learn/lecture/17695488#overview
  to make description nicer

==================================================================================================================================
==================================================================================================================================

  function loadDataTable() {
    dataTable = $('#tblData').DataTable({
        "ajax": {
            "url": "/Admin/Product/GetAll"
        },
        "columns": [
            {
                "data": "name", "width": "20%"
            },

            {
                "data": "price", "width": "10%"
            },

            {
                "data": "status", "width": "10%"
            },

            {
                "data": "description", "width": "20%"
            },

            {
                "data": "picture", "width": "10%"
            },
            {
                "data": "category.name", "width": "10%"
            },


            vs

  function loadDataTable() {
    dataTable = $('#tblData').DataTable({
        "ajax": {
            "url": "/Admin/Product/GetAll"
        },
        "columns": [
            {
                "data": "name", "width": "20%"
            },

            {
                "data": "price", "width": "10%"
            },

            {
                "data": "status", "width": "10%"
            },

            {
                "data": "description", "width": "20%"
            },

            {
                "data": "picture", "width": "10%"
            },
            {
                "data": "category.Name", "width": "10%"         // wrong even though capital
            },





==================================================================================================================================
==================================================================================================================================




<script>
    function validateInput() {
        if (document.getElementById("uploadBox").value = "") {      WRONG ==, CAUSED THE INPUT FILE NOT TO BE READ IN CONTROLLER
            swal("Error", "Please select an image", "error");
            return false;
        }
        return true;
    }
</script>

vs

<script>
    function validateInput() {
        if (document.getElementById("uploadBox").value == "") {
            swal("Error", "Please select an image", "error");
            return false;
        }
        return true;
    }
</script>


section 9 
108. 2:49 COMMON ERROR THAT OCCURRED




https://stackoverflow.com/questions/6389437/explanation-of-int-vs-int/6389815
https://stackoverflow.com/questions/556133/whats-the-in-front-of-a-string-in-c

==================================================================================================================================
==================================================================================================================================


Error CS0234
<TargetFramework>net5.0</TargetFramework>

NOT

<TargetFramework>netcoreapp3.1</TargetFramework>

==================================================================================================================================
==================================================================================================================================

.ToString("c") Currency Format

==================================================================================================================================
==================================================================================================================================

To reset:
1. Delete Database on sql server
2. Delete migrations
3. Rebuild (Run Add-Migration Initial again - then Update-Database)

To create Admin:
1. Add any user => initially roles are not created yet. will be made after first register
2. Go to Areas/Identity/Account/Register
3. Edit so can pick roles without being admin
4. Register account that should be the Admin

==================================================================================================================================
==================================================================================================================================

if a database object is editted and then saved, it will be updated automatically
eg.

cartFromDb.Count += addObject.Count;
//_unitOfWork.ShoppingCart.Update(cartFromDb);

_unitOfWork.Save();


==================================================================================================================================
==================================================================================================================================

To set Identity Folder: (Section 11 123)
1. Right-Click project
2. New Scaffolded Items
3. Identity Sidebar
4. Override all pages
5. Set Data Context Class 


==================================================================================================================================
==================================================================================================================================

To get logged in username:
eg. CartController
            var claimsIdentity = (ClaimsIdentity)User.Identity;
            var claim = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier);

            //var userId = User.FindFirstValue(ClaimTypes.NameIdentifier); // will give the user's userId
            //var userName = User.FindFirstValue(ClaimTypes.Name); // will give the user's userName

            // For ASP.NET Core >= 5.0
            //var userEmail = User.FindFirstValue(ClaimTypes.Email) // will give the user's Email


==================================================================================================================================
==================================================================================================================================

What is UnitOfWork?
all the models have a repository/data stored in the DB. unit of work initializes.
It holds all the classes in the model and its functions intialized with the database contents.
Can call functions like update using unitOfWork to affect DB.


==================================================================================================================================
==================================================================================================================================

To Remember: LIMITING DESCRIPTION LENGTH
                if (list.Product.Description.Length > 100)  // limiting length of description to 100 characters
                {
                    list.Product.Description = list.Product.Description.Substring(0, 99) + "...";
                }



==================================================================================================================================
==================================================================================================================================

Button is also index but button is a submit type. so needs HttpPost and set ActionName

        [HttpPost]
        [ActionName("Index")]
        public async Task<IActionResult> IndexPOST()
        {
            //string returnUrl = Url.Content("~/");
            var claimsIdentity = (ClaimsIdentity)User.Identity;
            var claim = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier);
            var user = _unitOfWork.ApplicationUser.GetFirstOrDefault(u => u.Id == claim.Value);

            if (user == null)
            {
                ModelState.AddModelError(string.Empty, "Verification email empty");
            }

            var code = await _userManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            var callbackUrl = Url.Page(
                "/Account/ConfirmEmail",
                pageHandler: null,
                //values: new { area = "Identity", userId = user.Id, code = code, returnUrl = returnUrl },
                values: new { area = "Identity", userId = user.Id, code = code},
                protocol: Request.Scheme);

            await _emailSender.SendEmailAsync(user.Email, "Confirm your email",
                $"Please confirm your account by <a href='{HtmlEncoder.Default.Encode(callbackUrl)}'>clicking here</a>.");

            ModelState.AddModelError(string.Empty, "Verification email sent. Please check your email");
            return RedirectToAction("Index");
        }

==================================================================================================================================
==================================================================================================================================

asp-route-id OR
asp-route-cartId

asp-route => .net thing
-xxx => variable used in controller

eg.

<button type="submit" asp-route-id="@item.Product.Id" asp-action="MinusProduct">
public IActionResult MinusProduct(int id)

Useful for partial views. A page can contain multiple models then using partial views

==================================================================================================================================
==================================================================================================================================

$ sign allows to use variable inside string

$"v1/payments/payment/{paymentId}/execute"

==================================================================================================================================
==================================================================================================================================


